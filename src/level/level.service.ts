import { Injectable, OnModuleInit } from '@nestjs/common';
import * as TelegramBot from 'node-telegram-bot-api';
import { ConfigService } from '@nestjs/config';

const notArray = [
  '–¢—ã —á—Ç–æ –∫–∞–∫–æ–Ω–∞—Ç–∏ ?',
  '–†–æ—Ç –∑–∞–∫—Ä–æ–π!',
  '–ö–∞–∫–∞–Ω–∞—Ç–æ—á–∫–∏ –æ—Ç–≤–µ—Ç',
  '–ë–∏—á–∏—Ö–∏ –æ—Ç–≤–µ—Ç',
];

@Injectable()
export class LevelService implements OnModuleInit {
  private bot: TelegramBot;

  constructor(private configService: ConfigService) {}

  onModuleInit() {
    const token = this.configService.get<string>('TELEGRAM_BOT_TOKEN');
    this.bot = new TelegramBot(token, { polling: true });

    this.bot.onText(/\/—Å–∞–ª–∞–º –∞–ª–µ–π–∫—É–º/, (msg) => this.handleHelloCommand(msg));
    this.bot.onText(/\/level/, (msg) => this.handleLevelCommand(msg));
    this.bot.onText(/–Ω–µ—Ç/, (msg) => this.handleNotCommand(msg));
  }

  private handleHelloCommand(msg: TelegramBot.Message) {    
    const chatId = msg.chat.id;
    const userName = msg.from?.first_name;
    const stickerId =
      'CAACAgIAAxkBAAEJ9OtnMkohjJgmcFabTQeMq-qspPdQGQACPkkAAhK7OEi_HNN0ZlYtITYE';

    this.bot.sendMessage(chatId, `${userName}, —Å–∞–ª–∞–º –∞–ª–µ–π–∫—É–º! üëãüèø`);
    this.bot.sendSticker(chatId, stickerId);
  }

  private handleLevelCommand(msg: TelegramBot.Message) {
    const chatId = msg.chat.id;
    const userName = msg.from?.first_name;
    this.bot.sendMessage(chatId, `${userName} –∫–∞–∂–µ—Ç—Å—è —Ç—ã –∫–∞–∫–æ–Ω–∞—Ç–∏`);
  }

  private handleNotCommand(msg: TelegramBot.Message) {
    const chatId = msg.chat.id;
    const randomElement = notArray[Math.floor(Math.random() * notArray.length)];
    this.bot.sendMessage(chatId, randomElement);
  }
}
